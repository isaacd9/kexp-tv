<?xml version = "1.0" encoding = "utf-8" ?>

<!--********** Copyright 2016 Roku Corp.  All Rights Reserved. **********-->

<component name = "MetadataLoader" extends = "Task" >

  <interface>
    <field id = "id" type = "string" />
    <field id = "uri" type = "uri" />
    <field id = "airdate" type = "time" />
    <field id = "show" type = "int" />
    <field id = "show_uri" type = "uri" />
    <field id = "image_uri" type = "uri" />
    <field id = "title" type = "string" />
    <field id = "artist" type = "string" />
    <field id = "album" type = "string" />
    <field id = "release_date" type = "time" />
    <field id = "comment" type = "string" />
    <field id = "play_type" type = "string" />
    <field id = "is_local" type = "bool" />
    <field id = "is_live" type = "bool" />
    <field id = "is_request" type = "bool" />
  </interface>

  <script type = "text/brightscript" >

    <![CDATA[
    sub init()
      m.top.functionName = "getmetadata"
    end sub

    sub getmetadata()
      m.port = CreateObject("roMessagePort")
      m.readInternet = createObject("roUrlTransfer")
      m.readInternet.setMessagePort(m.port)
      ' Dangerous but whatever (we don't appear to bundle the GoDaddy root
      ' cert, which is what this needs)
      m.readInternet.EnablePeerVerification(false)
      m.readInternet.EnableFreshConnection(true)
      m.readInternet.setUrl("https://api.kexp.org/v2/plays/?format=json&limit=3&ordering=-airdate")

        while(true)
            doRequest()
            sleep(3000)
        end while
    end sub

    sub doRequest()
        m.readInternet.AsyncGetToString()

        ' DataEvent
        dataEvent = wait(5000, m.port)
        if dataEvent.GetInt() = 2
            print "unexpected event type"
            ' Bail out early to avoid crashing
            return
        end if
        failure = dataEvent.GetFailureReason()
        if failure <> "OK"
            print failure
            return
        end if

        data = dataEvent.GetString()
        result = ParseJson(data)

        curSong = result.results[0]

        m.top.id = cursong.id
        m.top.uri = curSong.uri
        m.top.airdate = curSong.airdate
        m.top.show = curSong.show
        m.top.show_uri = curSong.show_uri
        m.top.image_uri = curSong.image_uri
        m.top.title = curSong.song
        m.top.album = curSong.album
        m.top.artist = curSong.artist
        m.top.release_date = curSong.release_date
        m.top.comment = curSong.comment
        m.top.play_type = curSong.play_type
        m.top.is_local = curSong.is_local
        m.top.is_live = curSong.is_live
        m.top.is_request = curSong.is_request
        print "updated"
    end sub
    ]]>

  </script>

</component>

